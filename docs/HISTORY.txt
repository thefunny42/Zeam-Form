Changelog
=========

1.0.1 (2012/02/23)
------------------

* Improve errors API to be more flexible. That fixes error reporting
  in nested widgets.

* Improve cloneFormData, in order to make more things customizable
  (validators, data manager).

1.0 (2010/10/19)
----------------

* Translation have been completed and reviewed in Dutch, French and
  German.

* An infrastructure to write generic validatators on all fields have
  been added (``dataValidators`` on a ``FormData``).

* Field ``getDefaultValue`` and ``defaultValue`` now take a
  parameter, the form itself. It allows you to compute a default value
  that needs the context.

* Some extraction issues have been fixed: a field which is not
  available is no longer extracte and the ``extractData`` method can
  now be called multiple times with different collection of fields.

* Some options have been added to Actions: a ``postOnly`` flag that
  requires the form to be submitted via the `POST` method only, and a
  ``description`` and ``accesskey`` properties. The ``postOnly``
  option is also available at the form level.

* Actions return a status flag for the success or the failure.

* Some helpers have been added to a form: ``haveRequiredFields`` and
  ``htmlId``. Default forms as well have a ``static`` attribute like
  Grok views do.

* Changed the attribute formError to formErrors which now  a list of errors
  instead of a single error. Because it's possible to have more then one
  main error in a form (eg. invariants).

* Changed the formtemplate to display the new formError in an <ul>
  <li> structure instead of the ... tal:replace ... for a single
  error.

* Added the ``sort`` and ``reverse`` methods on the `Collection`
  component. Tests have been added accordingly.

* Provided a `cmp` function to order components in a
  `Collection`. This is now thoroughly tested and demonstrated.


1.0rc2 (2010/07/16)
-------------------

* The marker to allow extraction affect as well processing them redisplaying
  values coming from the request.

* DataManager API is exported by default.

* DecoratedAction can be extended. You can provide your own implementation
  with the ``factory`` parameter of the decorator.


1.0rc1 (2010/07/05)
-------------------

* The `ExtractData` method has been splitted in two, with the
  introduction of the `validateData` method, that allows the form to
  override the global form validation process. This lets the
  fields validation at the very same place, and only involves
  the general form validation process.

* Created a new marker subclass for the form modes. This marker class
  defines a boolean allowing or not the extraction of the affected
  component, while the form is processed. Added tests for it.

* Look for entry points ``zeam.form.components`` before adapting items
  into components in collection. This let you register adapters before
  they are used.


1.0b4 (2010/06/22)
------------------

* Now the 'Errors' class can be used as a logical grouping of 'Error'
  and it stacks, in this case. Added tests to demonstrate and fix the
  behavior.


1.0b3 (2010/06/04)
------------------

* Fixed the way the identifiers are generated. Now, empty prefixes are
  no longer generating malformed ids/names. Added tests to fix that
  behavior.


1.0b2 (2010/05/13)
------------------

* Fix a bug in FormData initialization.

* Add a NO_CHANGE marker.


1.0b1 (2010/05/03)
------------------

* Initial release
